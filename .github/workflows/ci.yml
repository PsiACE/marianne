name: Tests

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"

concurrency:
  group: ${{ github.event.number || github.run_id }}
  cancel-in-progress: true

jobs:
  Testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]
        arch: [x64]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Set Variables
        id: set_variables
        shell: bash
        run: |
          echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_OUTPUT
          echo "PIP_CACHE=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Cache PIP
        uses: actions/cache@v3
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: ${{ runner.os }}-pip-${{ steps.set_variables.outputs.PY }}
      - name: Cache venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.python-version }}-${{ hashFiles('pdm.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.python-version }}-
      - name: Install current PDM via pip
        run: python -m pip install -U pdm
      - name: Install Dev Dependencies
        run: |
          python -m pip install -U setuptools
          pdm install -v -dGtest
          pdm install -v -dGlint
          pdm run pip install -U setuptools
          pdm info
      - name: Run Lints
        run: pdm run lint
      - name: Run Tests
        run: pdm run test
